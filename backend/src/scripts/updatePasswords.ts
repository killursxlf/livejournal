import bcrypt from "bcryptjs";
import prisma from "../prisma"; 

async function updatePasswords() {
  try {
    const users = await prisma.user.findMany({
      where: {
        NOT: [{ password: "" }], 
      },
      select: {
        id: true,
        email: true,
        password: true,
      },
    });

    for (const user of users) {
      if (!user.password) continue; 

      const password = user.password as string; 

      if (!password.startsWith("$2a$")) {
        const hashedPassword = await bcrypt.hash(password, 10);
        await prisma.user.update({
          where: { id: user.id },
          data: { password: hashedPassword },
        });
        console.log(`‚úÖ –û–±–Ω–æ–≤–ª—ë–Ω –ø–∞—Ä–æ–ª—å –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${user.email}`);
      }
    }

    console.log("‚úÖ –í—Å–µ —Å—Ç–∞—Ä—ã–µ –ø–∞—Ä–æ–ª–∏ —Ö–µ—à–∏—Ä–æ–≤–∞–Ω—ã!");
  } catch (error) {
    console.error("üö® –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø–∞—Ä–æ–ª–µ–π:", error);
  }
}

updatePasswords();
