"use client";

import { useState } from "react";
import { useRouter } from "next/navigation";

export default function Register() {
  const router = useRouter();
  const [email, setEmail] = useState("");
  const [name, setName] = useState("");
  const [username, setUsername] = useState(""); // üëà –î–æ–±–∞–≤–ª–µ–Ω username
  const [password, setPassword] = useState("");
  const [error, setError] = useState("");
  const [loading, setLoading] = useState(false); // üëà –î–ª—è –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –∫–Ω–æ–ø–∫–∏ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ

  const handleSubmit = async (e: React.FormEvent) => {
    e.preventDefault();
    setError("");
    setLoading(true);

    if (!email || !password || !username) {
      setError("–í—Å–µ –ø–æ–ª—è –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã!");
      setLoading(false);
      return;
    }

    try {
      const res = await fetch("http://localhost:3000/api/register", {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        credentials: "include", // üëà –¢–µ–ø–µ—Ä—å –∫—É–∫–∏ –±—É–¥—É—Ç —Ä–∞–±–æ—Ç–∞—Ç—å
        body: JSON.stringify({ email, name: name || "", username, password }), // üëà –û—Ç–ø—Ä–∞–≤–ª—è–µ–º username
      });

      const data = await res.json();

      if (!res.ok) {
        throw new Error(data.error || "–û—à–∏–±–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏");
      }

      alert("–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞!");
      router.push("/login");
    } catch (err: any) {
      setError(err.message || "–û—à–∏–±–∫–∞ —Å–µ—Ç–∏");
    } finally {
      setLoading(false);
    }
  };

  return (
    <div className="container mx-auto p-4 max-w-md">
      <h1 className="text-3xl font-bold text-center">–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è</h1>
      {error && <p className="text-red-500 text-center mt-2">{error}</p>}
      <form onSubmit={handleSubmit} className="mt-4">
        <input
          type="text"
          placeholder="–ò–º—è (–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ)"
          value={name}
          onChange={(e) => setName(e.target.value)}
          className="block w-full p-2 border rounded mb-2"
        />
        <input
          type="text"
          placeholder="Username"
          value={username}
          onChange={(e) => setUsername(e.target.value)}
          className="block w-full p-2 border rounded mb-2"
          required
        />
        <input
          type="email"
          placeholder="Email"
          value={email}
          onChange={(e) => setEmail(e.target.value)}
          className="block w-full p-2 border rounded mb-2"
          required
        />
        <input
          type="password"
          placeholder="–ü–∞—Ä–æ–ª—å"
          value={password}
          onChange={(e) => setPassword(e.target.value)}
          className="block w-full p-2 border rounded mb-2"
          required
        />
        <button
          type="submit"
          className="bg-green-600 text-white p-2 rounded w-full mt-2 disabled:bg-gray-400"
          disabled={loading} // üëà –ë–ª–æ–∫–∏—Ä—É–µ–º –∫–Ω–æ–ø–∫—É –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
        >
          {loading ? "–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è..." : "–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è"}
        </button>
      </form>
      <p className="mt-4 text-center">
        –£–∂–µ –µ—Å—Ç—å –∞–∫–∫–∞—É–Ω—Ç? <a href="/login" className="text-blue-600">–í–æ–π—Ç–∏</a>
      </p>
    </div>
  );
}
