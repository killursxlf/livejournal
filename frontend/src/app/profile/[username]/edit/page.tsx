"use client";

import { useEffect, useState } from "react";
import { useParams, useRouter } from "next/navigation";

export default function EditProfile() {
  const { username } = useParams();
  const router = useRouter();
  const [user, setUser] = useState<any>(null);
  const [bio, setBio] = useState("");
  const [avatar, setAvatar] = useState<File | null>(null);
  const [error, setError] = useState("");

  useEffect(() => {
    if (username) {
      fetch(`http://localhost:3000/api/user?username=${username}`)
        .then((res) => res.json())
        .then((data) => {
          if (data.error) {
            setError(data.error);
          } else {
            setUser(data);
            setBio(data.bio || "");
          }
        })
        .catch(() => setError("–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø—Ä–æ—Ñ–∏–ª—è"));
    }
  }, [username]);

  const handleSave = async () => {
    await fetch("http://localhost:3000/api/update-profile", {
      method: "POST",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify({ email: user.email, bio }),
    });
    alert("‚úÖ –ü—Ä–æ—Ñ–∏–ª—å –æ–±–Ω–æ–≤–ª—ë–Ω!");
    router.push(`/profile/${username}`);
  };

  const handleAvatarUpload = async () => {
    if (!avatar) return;
  
    const formData = new FormData();
    formData.append("avatar", avatar);
    formData.append("email", user.email); // ‚úÖ –ü–µ—Ä–µ–¥–∞—ë–º email –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  
    const res = await fetch("http://localhost:3000/api/upload-avatar", {
      method: "POST",
      body: formData,
    });
  
    const data = await res.json();
  
    if (res.ok) {
      alert("‚úÖ –ê–≤–∞—Ç–∞—Ä –æ–±–Ω–æ–≤–ª—ë–Ω!");
      router.push(`/profile/${username}`); // ‚úÖ –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ –ø—Ä–æ—Ñ–∏–ª—å
    } else {
      alert(`üö® –û—à–∏–±–∫–∞: ${data.error}`);
    }
  };
  
  
  
  

  if (error) return <p className="text-red-500">{error}</p>;
  if (!user) return <p>–ó–∞–≥—Ä—É–∑–∫–∞...</p>;

  return (
    <div className="container mx-auto p-6">
      <h1 className="text-3xl font-bold mb-4">–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è</h1>

      <label className="block">–û —Å–µ–±–µ:</label>
      <textarea value={bio} onChange={(e) => setBio(e.target.value)} className="w-full p-2 border rounded" />
      <button onClick={handleSave} className="mt-2 bg-blue-600 text-white p-2 rounded">
        –°–æ—Ö—Ä–∞–Ω–∏—Ç—å
      </button>

      <label className="block mt-4">–ó–∞–≥—Ä—É–∑–∏—Ç—å –∞–≤–∞—Ç–∞—Ä:</label>
      <input type="file" onChange={(e) => setAvatar(e.target.files?.[0] || null)} className="border p-2" />
      <button onClick={handleAvatarUpload} className="mt-2 bg-green-600 text-white p-2 rounded">
        –ó–∞–≥—Ä—É–∑–∏—Ç—å
      </button>
    </div>
  );
}
